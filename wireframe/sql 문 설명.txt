create table user(
uid int primary key auto_increment, 회원 식별자
nickname varchar(20) not null, 닉네임
name varchar(20) not null, 이름
email varchar(50), 이메일(아이디 대용)
password varchar(50), 비밀번호
phone varchar(20) not null, 전화번호
birth date not null, 생년월일
profileImg varchar(500) default 'img/profile.png', 프로필 사진
loginApi int not null default 0, 로그인api 종류(카카오1, 구글2, 네이버3)
userkey varchar(10) not null, 유저 인증여부(인증되있으면 Y 라 됨)
userid varchar(20) sns로그인 유저 식별자
);

create table follow(
following int, 팔로잉한 사람
follower int, 팔로잉된 사람
foreign key(following)
references user(uid) on update cascade on delete cascade,
foreign key(follower)
references user(uid) on update cascade on delete cascade
);

create table board(
boardid int primary key auto_increment, 게시물 식별자
uid int not null, 게시물 작성자
title varchar(50) not null, 제목
writedate date not null, 작성일자
tripterm varchar(10) not null, 여행기간
keyword varchar(200), 검색 키워드
latitude double not null, 위도
longitude double not null, 경도
level int not null, 지도 축소 정도
favoriteNum int not null default 0, 좋아요 수(게시글 조회시마다 갱신)
unveiled boolean not null default true, 게시글 공개 비공개 여부
foreign key(uid)
references user(uid) on update cascade on delete cascade
);

create table favorite(
uid int not null, 좋아요 누른 사람
boardid int not null, 좋아요 눌러진 글
makedate datetime not null, 좋아요 누른 시각
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table scrap(
uid int not null, 스크랩한 사람
boardid int not null, 스크랩된 글
makedate datetime not null, 스크랩한 시간
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table comment(
commentid int primary key auto_increment, 코멘트 식별자
uid int not null, 코멘트 작성자
boardid int not null, 코멘트 달린 글
contents varchar(100) not null, 코멘트 내용
writedate datetime not null, 코멘트 작성시간
listener int not null default 0, 코멘트 달은 댓글(상대commentid값)
foreign key(uid)
references user(uid) on update cascade on delete cascade,
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table img(
imgid int  primary key auto_increment, 이미지 식별자
boardid int not null, 이미지 달린 글
src varchar(500) not null, 이미지 주소
rep boolean default false, 대표이미지인가
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table marker( 맵에 하나씩 들어가는 마커에 대응
게시글 하나당 지도 하나라는 가정하에 만들어져 있다
markerid int primary key auto_increment, 마커 식별자
boardid int not null, 마커 달린 게시글
latitude varchar(500) not null, 마커 위도
longitude varchar(500) not null, 마커 경도
remark varchar(500), 주석
overlaytype varchar(100) not null, 마커모양
radius int, 원일 경우 반지름
foreign key(boardid)
references board(boardid) on update cascade on delete cascade
);

create table blacklist(
uid int not null, 토큰이 가지고 있던 uid
exp datetime not null 토큰이 가지고 있던 만료기간
);

create table alarm(
alarmid int primary key auto_increment, 알림 식별자
uid int not null, 알림 받을 uid
boardid int, 어느 글 관련인가
commentid int, 어느 코멘트인가
follow int, 누가 날 팔로우했는가
alarmtype int not null, 알림타입(팔로우1, 댓글2, 대댓글3, 팔로잉한글4)
nickname varchar(20), 알림오도록 행동한 주체의 닉네임
time datetime not null 알림 생긴 시간
);